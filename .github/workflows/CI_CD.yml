name: CI/CD_1

on:
  push:
    branches:
      - main # Trigger on push to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code, including submodules
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}
          submodules: recursive # Ensure submodules are updated recursively

      # Step 2: Debug folder structure (optional)
      - name: Debug folder structure
        run: |
          echo "Workspace folder structure:"
          ls -R src

      # Step 3: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # Adjust Node.js version as per your requirements

      # Step 4: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 5: Build the React app
      - name: Build React app
        run: npm run build # Builds the React app into the dist folder

      # Step 6: Deploy to EC2 with Nginx
      - name: Deploy to EC2 with Nginx
        run: |
          # Write the private SSH key from GitHub Secrets to a file
          echo "${{ secrets.AWS_SSH_KEY }}" > aws_ssh_key.pem
          chmod 600 aws_ssh_key.pem  # Set proper file permissions for the private key
          eval "$(ssh-agent -s)"     # Start SSH agent
          ssh-add aws_ssh_key.pem    # Add SSH key to the agent

          # SSH into the EC2 instance and deploy the React app
          ssh -o ServerAliveInterval=60 -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} << 'EOF'
            # Navigate to workspace directory
            cd /home/ubuntu/workspace

            # Clone the repository if it doesn't exist
            if [ ! -d "/home/ubuntu/workspace/shope-ease/.git" ]; then
              git clone https://ARVishnu:${{ secrets.GH_PAT }}@github.com/vishnu-organization/shope-ease.git shope-ease
            else
              cd /home/ubuntu/workspace/shope-ease
              git pull origin main  # Pull the latest changes
            fi

            # Set Git credentials for submodules
            git config --global url."https://ARVishnu:${{ secrets.GH_PAT }}@github.com/".insteadOf "https://github.com/"

            # Initialize and update submodules
            git submodule update --init --recursive

            # Navigate to the project folder
            cd /home/ubuntu/workspace/shope-ease

            # Install dependencies and build the app
            npm install
            npm run build

            # Check if dist folder exists
            if [ ! -d "./dist" ]; then
              echo "Build directory not found. Exiting."
              exit 1
            fi

            # Ensure Nginx is stopped before deploying the new build
            sudo systemctl stop nginx

            # Remove old files from the Nginx directory
            sudo rm -rf /var/www/html/*

            # Copy the new build to Nginx's web directory
            sudo cp -r dist/ /var/www/html/shope-ease

            # Set proper ownership for the files in Nginx's web directory
            sudo chown -R www-data:www-data /var/www/html/shope-ease

            sudo chomd -R 755/var/www/html/shope-ease

            sudo nginx -t

            # Restart Nginx to apply the changes
            sudo systemctl restart nginx

            # Verify Nginx status
            sudo systemctl status nginx

            echo "Deployment successful!"
            exit
          EOF
