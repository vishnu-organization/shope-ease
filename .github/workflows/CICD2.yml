name: CI/CD_2

on:
  push:
    branches:
      - mainnn # Trigger on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repository with submodules
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}
          submodules: false # Avoid auto-initialization of submodules

      # Step 2: Initialize and update submodules
      - name: Initialize submodules
        run: |
          git submodule update --init --recursive

      # Step 3: Debug folder structure (Optional)
      - name: Debug folder structure
        run: |
          echo "Folder structure after submodule initialization:"
          ls -R src

      # Step 4: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 5: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t vishnuenest/my-react-app .

      # Step 6: Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push vishnuenest/my-react-app:latest

      # Step 7: SSH into EC2 and deploy the app
      - name: Deploy to EC2
        run: |
          echo "${{ secrets.AWS_SSH_KEY }}" > aws_ssh_key.pem
          chmod 600 aws_ssh_key.pem
          eval "$(ssh-agent -s)"
          ssh-add aws_ssh_key.pem

          ssh -o ServerAliveInterval=60 -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} << 'EOF'
            # Navigate to the workspace directory
            cd /home/ubuntu/workspace

            # Pull the Docker image from Docker Hub
            docker pull vishnuenest/my-react-app:latest

            # Stop and remove any running container
            docker stop react-app-container || true
            docker rm react-app-container || true

            # Run the React app inside a Docker container with Nginx
            docker run -d --name react-app-container -p 80:80 vishnuenest/my-react-app:latest

            # Restart Nginx to ensure it's serving the app
            sudo systemctl restart nginx

            echo "Deployment successful!"
            exit
          EOF
